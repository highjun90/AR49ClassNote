 지난 시간에 큐브메쉬의 빛 처리가 제대로 안된 이유를 설명할게요

  - 우선, 광원의 방향은 월드 스페이스 기준으로 설정한거에요. 뷰스페이스도 아니고 로컬 스페이스도 아닙니다. 이 사전약속에 따라서 쉐이더 코드가 달라져야 할수 있음. 꼭 명심할것
    우리는 월드기준으로 빛세기를 처리하고있어요
 
 - 첫번쨰, 지난 시간에 동차좌표를 0으로 설정해서 노벌벡터의 월드이동을 무효화 처리 했어도, 크기는 무효화 하지 않았습니다.

   빛벡터 노멀벡터 두벡터는 단위벡터라고 가정하고 빛의 세기 최대최소값을 정의했는데(0~1사이값), 크기가 1 이상이 되버리면 빛의 세기가 올바르게 계산되지 않겠죠 막 극단적인 색깔 변화가 나타날겁니다.
   따라서 월드 이동 무효화 뿐만아니라 월드행렬에 포함되어있는 크기도 무효화 시켜야합니다.
   그래서 정규화를 꼭 해줘야 0~1사이값이 나옵니다. 
   * dot()함수 인듯하다

   && 지난시간에 월드이동을 무효화 한 이유랑 비슷합니다. 빛의 세기 결과값을 0~1사이로 둬야하기 떄문.
   

 - 두번째, 빛의세기가 음수가 됬을떄(두 벡터 사이 각도가 90도 이상일때) 예외처리를 하지 않았다.
   saturate()함수로 값을 0~1사이로 고정시킨다.
   이걸 안해주면 아무리 Ambitent로 물체가 최소한으로 보이게 해주려고 해도 빛의 세기 값이 마이너스이기 때문에 전혀 안보이는 각도가 생긴다.
   빛의 세기는 음수개념이 없기때문에 이 설정을 해줘야합니다.



 - 이제 sphere 메쉬를 만들건데 이것도 지난기수꺼 가져올게요.
  
  - 우선. 구를 가로로 봤을떄 한 단면을 40등분으로 설정했고요,
          구를 세로로 봤을때도 단면을 40등분으로 설정했습니다.
          분할 수가 많을수록 메쉬 퀼리티가 좋아집니다. 적으면 더 각져보이겠죠

  - 각 정점의 노말벡터는 본인의 포지션이에요. 본인의 좌표자체가 법선벡터라고요. 
    탄젠트는 본인기준 우측으로 설정시켰고요
    바이노멀은 아래쪽으로 향하게.

  - 40 x 2 x 3 x 40 해서 총 9600 개의 정점이 필요하구요
    인덱스버퍼 쓰면 좀 줄일수 있어요

 - 문제점 - 묘하게 구의 명암이 각져보인다..?
   해상도를 낮춰보면 알수있다. 한면의 밝기를 일괄적용하기 때문에 구의 어느 경계선이 각져보인다.

 - 해결법?
  - 정점에서 빛을 연산할게 아니라 노말벡터를 보간해서 픽셀 쉐이더에 넘겨줘요. 스피어는 큐브메쉬랑 다르게 토폴로지의 정점들의 법선벡터가 다 다릅니다. (다 자기 Pos라고 했죠?)
    그 사이에 있는 픽셀들의 법선벡터를, 정점들의 법선벡터의 보간된 값을 넘겨주는 거에요. 
    정점계산할때 새로 계산해줘야할게 하나 더 추가되는거죠.
  - 즉 이제 방법이 두가지 입니다. 원래는 정점쉐이더에서 광원세기를 계산하던지,
    아니면 픽쉘 쉐이더에서 보간된 법선벡터를 이용해서 좀더 부드럽게 픽셀의 광원 세기를 결정하던지.
    원래는 전자가 최적화에 더 유리했는데 컴퓨터성능이 좋아진 현대에는 후자 방식을 선택해도 성능 차이가 거의 없어요.
    
   - 전자를 고로쉐이딩(Gouraud), 픽셀단위에서 연산하면  퐁쉐이딩(Phong) 이라고 합니다.

  - g_int_0을 플래그 값으로 설정해서 0이면 고로쉐이딩 방식으로 빛의 세기를 계산하고, 1이면 퐁쉐이딩 방식으로 설정하게 픽셀쉐이더 코드를 짰어요. 
    