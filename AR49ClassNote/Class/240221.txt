 * 윈도우 메인메뉴 만들기
  - Client -> 02 UI -> 4 MenuUi -> MenuUI.cpp
  - BeginMenu() 와 EndMenu() 사이에 MenuItem()으로 목록들을 추가 시킬수 있다.
   - BeginMenu() 내부에 또 BeginMenu()를 열어서 목록들의 목록들을 중첩시키는 형태가 가능.
  
  - file 파트는 레벨의 세이브 로드 기능이 들어갈것임
  - Level 파트는 레벨을 Play, Pause, Stop 상태로 만드는 기능이 들어갈것.
  - GameObject 파트는 오브젝트를 생성할것임
  - Asset 파트는 재질을 만드는 기능등이 구현될것임.
  
  - UI 상에서 만든 오브젝트는 컨텐츠리셋해서 아웃라이너가 그 오브젝트들을 인지시키면 되는데 예를들어 레벨 내부에서 미사일같은 애를 만들때는 인지시킬 방법이 좀 곤란함.
    그래서 taskMgr에서 bool값 2개 맴버를 새로둬서 오브젝트가 생기고 삭제될때 그 tick에서 해줘야할 일을 처리하게 한다.
    
* 현재 우리 프레임워크 구조가 Level의 tick() -> finaltick() -> 렌더매니저의 render()-> task -> imgui의 progress
   이게 1 프레임이다.

  - Creat()는 task가 만들자마자 바로 레벨에 넣어줘서 동기화 문제가 없는데 오브젝트 삭제는 딱 그프레임에서 삭제 지시를하면 그 다음 프레임에서 그게 반영되기 떄문에 현재 구조는 삭제가 좀 곤란.
   그래서 억지구조를 짠다 m_DeleteFrameCount 라는 맴버로 이게 2보다 클때 m_bDeleteObject bool값(이하 삭제불값)을 true로 만들어준다.
   
  ** task에서 삭제 기능을 수행하면 그 오브젝트를 dead 처리만 하고 레벨에서 완전 빠지는게 아니기 떄문에 이떄 아웃라이너 갱신을 해봤자 의미가 없다.(레벨에서 완전 빠진게 아녀서 죽은 오브젝트가 아웃라이너에 그대로 표시되어있음)
     dead된 오브젝트는 바로 다음틱에서 레벨에 빠지기 때문에 아웃라이너는 결국 삭제task 기능이 수행되고 그 다음에 갱신되어야 한다. (1프레임지연)

     그래서 카운트값을 하나둬서 0이면 오브젝트 삭제 기능 발동안한상태, 1이면 오브젝트 삭제기능이 실시된상태, 2는 삭제된 오브젝트가 안보이게 아웃라이너 갱신하는 지시값으로 사용.
     선생님이 어거지로 짠 구조라고 하지만 task에서 모든 이벤트를 관리하게 하고 싶은 욕심으로 깔끔하지 않더라도 그냥한다함
     전기수에는 레이어쪽 건들여서 해결했다함

 - CTask::Cleat()
  - 오브젝트삭제 등의 task 상태를 저장하는 bool값을 갱신해주는 함수. 
  - 아웃라이너 갱신을 위한 카운트 값도 갱신시켜줌.
  - task 실행시 거의 처음부분에서 꼬박꼬박 실행됨

 - 아웃라이너는 tree노드의 간판역할만하고 본인이 할게 딱히 없었는데 이제는 render_update()에서 task의 오브젝트 삭제 메세지가 오면 갱신을 하는 기능을 수행한다.
   -> 자식노드 렌더업데이트 전에 드래그드랍하려고하면 동기화 에러 발생할수는 있는데 지금은 안건든다함

 ** Imgui 상에서 만든 오브젝트의 레이어는 0번으로 설정할게요 나중에 수정하시오


 =======================================================================================

  # 메뉴바에서 에셋(재질등) 추가시킬수 있는 기능만들기

 - UI에서 구현하기 전에 태스크에서 재질 추가삭제하는 기능이 아예 없었으므로 구현함
 - TASK_TYPE 에 ADD_ASSET 추가. 삭제하는 건 안만듬 에셋매니저에서 안쓰는 에셋은 대량으로 자동으로 삭제하는 기능을 만들예정? 
 
 - m_bAssetChage라는 맴버추가 
 - 에셋의 이름은 경로로 해야한다. 이름이 곧 키값이 된다, 그래서 pMtrl->SetName()에 들어갈 인자는 재질의 파일경로가 되야한다.
   이렇게 설정한 이름(=경로)이 AddAsset()에서 키값으로 활용된다.

 - 재질 추가할때마다 이 경로가 키값이 되기때문에 겹치면안되는데 이름 다르게 하는 방법으로 지금 c++ 실험 기능인 파일라이브러리를 활용해보겟다. 내일하겠다.
   pass라는 클래스


 - 아웃라이너에서 오브젝트 추가될떄 render_update()에서 뭐 해줬던거 처럼 content에서도 렌더 업데이트에서 뭐 해준다.
  - GetAssetEvent()로 변경사항이 잇는지 확인하고 ResetContent()로 변경사항을 적용한다.

 - AddAsset()에서는 들어온 키값의 경로를 뭐 어떻게 해줘야된다던데 이해못함

 ? comptr 일반포인터 소멸관련해서 Ptr객체대신 일반포인터사용,
   new 소괄호 안써줌

 - 노드이름은 getselected 해서 어찌저찌 바꾸는 기능 찾아서 하라