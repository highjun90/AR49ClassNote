 # 어제 파일로 재질 세이브 로드하는 원리 설명한거 오늘 구현해보자.

 - MenuUI 
  - Demo Imgui 참고하면 윈도우창 상단에 있는 메뉴바처럼 동작하는 역할을 하는 UI. imgui_demo.cpp 에서 코드를 긁어온다.
  - BeginMenu()와 EndMenu()사이에 내용을 채워넣어주면됨

  - 요거 구현하게 되면 메뉴바에서 'CreateObject'라는 항목 만들고 그거 클릭하면 transform 속성 하나만 딸랑 가진 오브젝트를 생성하는 기능을 구현할 수 있음
    이걸로 지난번에 구현한 재질 넣어주고 이런 작업들 해주면 정말 편할것이다.

  **** 앞으로 툴의 방향성을 좀 말하겠다 -> 레벨에 상태값을 부여할겁니다. 
   - CLevel.h에 enum으로 LEVEL_ 을 만듦
     Play, Pause, STOP 이라는 상태가 있음
    - STOP일때는 Tick()도 안돌고 DT도 안커짐. 이제 DT 종류도 2가지로 나눠서 다룰거임
   - 슈퍼마리오 예시를 듦. PLAY상태여야 게임이 시작됨. STOP이면 DT도 0이고 Tick()도 안돔. 에디터 카메라를 따로 만들겠다. 
     STOP상태에선 에디터 카메라 기준으로 화면이 보여지고, PLAY 상태면 에디터카메라가 어딜 보고있었던 강제로 메인카메라 화면을 보여준다. 이때 또 STOP상태가되면 레벨이 최초 시작상태로 고대로 재현이 되야함.
     즉, 레벨이 정지되어 있는 상태에서 변경한 사항만이 실제로 게임에 반영되고, PLAY 상태에서 바꾼 사항들은 STOP 상태가 되는 순간 모두 사라진다. 실수로 레벨이 PLAY나 PAUSE 상태에서 수정사항을 적용했다가
     레벨 STOP이 되는 순간 내가 작업했던 내용이 싹다 날라가는 참사가 벌어질수 있음. 이런 구조는 게임 관리를 용이하게 하기위해 일부러 이렇게 구현된다.

--------------- 재질 save load 구현하기

 - 원래 상용엔진은 어떤 asset이든 세이브로드가 되야되는데 수업엔진 특성상 그렇지 못한에셋도 있다 대표적인게 shader. 그래서 save()함수 같은걸 순수가상함수로 구현하기엔 좀 무리가 있다.
   그래서 가상함수로 만들게요 (CAsset.h)
   Save()는 상대경로로 인자주고 Load()는 절대경로를 인자로 한다함
 - 블렌더같은 프로그램으로 모델링한 mesh를 디자이너가 export한 정점들 정보를 load합니다. mesh정보도 가져오는거죠. 
 - fbx는 3d맥스 확장자고 온갖에셋이 다들어있다. 텍스처 메쉬등등 fbx 파일 하나를 load하면 나중에 그 fbx 파일 없어도 프로그램 돌아가게 딴데다 미리 메쉬정점정보, 텍스처 정보등을 구분해서 따로 저장해논다.
   이렇게 하는 이유는 fbx 파일 분해 해체 조립하는 작업이 너무 오래걸려서 한번 분해 해체 조립하는 김에 따로 에셋들을 구분해서 저장해 두는 것이다.
   이렇듯 앞으론 재질 뿐만아니라 메쉬도 세이브로드 기능이 구현될 겁니다.


=======================================================================

 - CMaterial:Save()함수
  - 인자로 파일의 상대경로를 받음. 주어진 경로의 파일을 조사해서 에셋정보를 저장
  ??) _wfopen_s()함수, fwrite()함수 등 
  - 어떤 에셋을 참조할때 키값과 상대경로 정보를 저장해야한다.  

 - Load()함수 
  - 

  - wstring 클래스는 본인지 관리하고있는 문자 개수 .length(), 실제 데이터는 .c_str()에 있는데
    문자개수가 적으면 wstring 객체 내부에 저장하지만  문자가 6 7개 넘어가면 실제 문자열은 딴데두고 wstring의 포인터맴버에 주소값으로 대신 저장한다. fwrite()함수 쓸때 인자로 wstring 객체를 넘겨주는 실수
    하지마라. 꼭 멤버함수 잘 써서 인자를 올바르게 전달해라. 가끔 wstring 자체를 인자로 전달하고 어 잘되는데요 이럴때 있는데 이건 문자열 길이가 짧을때 얻어걸린거임
    if(bTeExist) 부분의 fwrite()함수 쓴데를 유심히 분석하라.




 - 어떤 에셋의 참조정보를 저장하는 기능을 함수로 만들자 fun.h
   어떤 에셋이든 어떤경우에든 작동해야함
 - SaveAssetRef() 함수
  - 에셋종류에 따른 포인터를 인자로 받게 템플릿으로 구현
  - 삼항연산자로 에셋이 null일경우를 대비
 - LoadAssetRef()함수도 SaveAssetRef()내용 복붙해서 살짝씩 코드 고쳐주면됨

 ?) LoadAssetRef()의 첫번째 인자로 레퍼런스를 썻는데, SaveAssetRef()는 레퍼런스가 아닌이유
   
 - 이제 직접 재질같은 에셋을 파일로 세이브 로드할수있게됨 나중에 파일로 있는 애들을 자동 로드 시스템으로 자동으로 인식해서 자동으로 load해주는 구조 만들것


