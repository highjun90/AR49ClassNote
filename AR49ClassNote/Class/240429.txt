 - 어제 디버그 스피어 만들었고 오늘은 스카이박스. 스카이박스는 컴포넌트로 취급할겁니다.

 - CSkyBox 클래스는 렌더컴포넌트를 상속합니다.
   그렇다는 것은 메쉬와 머터리얼을 세팅할수 있다는 말이죠

   컴포넌트니까 finaltick() 무조건 구현해줘야하구요

   enum class로 스카이박스의 타입을 2가지로 정의해둘게요. sphere 와 box

   그리고 컴포넌트 추가했으니 게임오브젝트에 Get 매크로와 컴포넌트의 Get매크로 추가.

   component.h 파일에 CSkyBox.h를 인클루드

   CLONE 복사생성자 매크로 추가

   렌더컴포넌트를 상속했기 때문에 UpdateData()와 render()도 무조건 구현해야하죠 안하면 디버그 오류.

 - 레벨에 스카이박스 오브젝트 생성.
 - 광원설정은 다시 디렉셔널로 바꿀게요.

 - SetSkyBoxType()함수
  - 인자로준 Type에 따라 if문으로
    SetMesh() 호출해서 타입에 맞는 메쉬로 세팅한다.
   - 스카이박스는 이렇게 타입지정하면 자동으로 메쉬가 설정됩니다.
     메쉬렌더는 다양한 메쉬를 세팅하게 놔두지만 타일맵이나 파티클시스템이나 스카이박스는 미리 메쉬를 정해놓기 때문에 외부에서 따로 설정할 필요가 없는거죠

 - 쉐이더 파일 만들때마다"쉐이더형식" "쉐이더모델"을 각각 fx와 5.0 으로 설정해주는 모습이 계속 보인다.
 - skybox.fx 파일
  - 스카이박스용 쉐이더 파일.

 &&쉐이더에서 설정한 VS_IN VS_OUT과 내 c++ 파일과 어떻게 연동하는 걸까?
  - CAssetMgr_init.cpp 에서 주석으로 SkyBoxShader 보세요.
  - 아 그리고 포폴할떄 쉐이더 도메인 설정 잘못해서 문제 생기는 학생들 정말 많이 봤으요 DOMAIN_TRANSPARENT 가 제일 마지막에 그려지죠? 정확하게 구조 다시 파악해보세요
  
 - SKyBoxShader, CAsset_Init.cpp
  - 스카이 박스는 뭔가 물체가 그려지면 스카이박스는 그려지면 안됩니다. 더 가까이 있는 물체가 그려졌으면 더 멀리있는 스카이 박스가 그려지면 안되죠?
    그러니까 깊이스텐실 설정 해줘야 하구요. NDC좌표계에서 범위가 0~1이었죠? 1이 가장 멀리 있는 건데 스카이박스는 1이되야갰죠?

    DS_TYPE은 지금까지 한번도 안쓴 LESS_EQUAL로 할게요.
    LESS 옵션을 써버리면 안되는 이유는, 원래 깊이스텐실 텍스처가 자동으로 값이 1로 초기화된다고 했죠?
    그런데 나도 스카이박스의 깊이를 1로설정한단 말이죠? 그러면 LESS 설정 해버리면 스카이박스 본인의 갚이스텐실 "1"이 다른 깊이스텐실보다 작을떼만 그려지기 떄문에
    깊이스텐실 텍스처가 똑같은 1 이기 때문에 스카이 박스가 안그려집니다. 
    
    즉 남들보다 1보다 작을때만 그리세요가 less가 되고, 남들보다 1보다 같거나 작을때만 그리세요가 less equal입니다.
    스카이박스 깊이를 가장 먼 1로 두고싶다 + 기본깊이스텐실 텍스처의 깊이값이 1로 똑같다 라는 조건이 합쳐져서
    그래서 스카이박스의 깊이타입을 LESS_EQUAL로 설정하는겁니다.

 - (Skybox 머터리얼도 만드심)


 %% AssetMgr 에서 쉐이더와 머터리얼 만드시고나서 픽셀 쉐이더에서 이것저것하셨다.
    정말 VS_IN VS_OUT 이런 애들은 에셋매니저에서 쉐이더와 머터리얼을 만들면 변수연결 되나본데?

  
 - render()에서 UpdateData()로 transform과 Getmaterial() 데이터 업데이트 해주고 그림


 - 자 이렇게 빌드 해보면 파란 구가 생긴다. 
  - 컬백이래서 구 안쪾으로 카메라 들어가면 구가 사라짐. 토폴로지 방향이 다 반시계가 되버리기 때문.
    원래 컬백 쓰는 이유가 구의 뒷면은 어차피 보이지도 않는거 불필요하게 그거 렌더링하는 자원낭비를 피하려고 해서 컬백설정을 한건데
    문제는 스카이박스는 항상 내부를 볼거기 때문에
    스카이 박스는 항상 컬링프론트로 설정해야된다는 것이다.
    오히려 앞면을 안그리고 뒷면을 그려야한다는 뜻.
    반시계를 그리고 시계방향을 안그림.

    그래서 컬링프론트 설정으로 해줍니다.

 - 이제 스카이 박스에 텍스처를 씌워주자.
  - SetSphereTexture(), SetCubeTexture()함수 생성.
   - UpdateData() 함수에서
     if문으로 텍스처가 세팅되어있다면 GetMaterial()->SetTexParam()함수 호출.
   - 이때 TEX_PARAM:: 설정에서 큐브만 TEXCUBE 라는 슬롯에 따로 설정하는데 나중에 설명할게요 스피어는 원래 우리가 자주쓰던 슬롯에 넣구요

  - 레벨에 스카이박스에 텍스처 설정 해줍시다.
   - 텍스처 세팅할때 "Find() 말고 Load()를 써야되네 tempLevel이 에셋매니저보다 먼저 호출되나보다"


 
 - 지금 카메라가 이동하면 스카이박스 텍스처도 휙휙 움직여서 멀리잇다는 느낌이 안듭니다.
   당연히 내가 스카이박스에 다가가도 도달하지도 못해야겠죠? 다음시간에 이런 고민을 해결해보죠



(tortoise업데이트 안하심)
=============================================================================================

- 스카이박스를 어떻게 설정해야 정말 저 멀리있는 거처럼 보일까

1) 스카이박스가 항상 카메라를 따라다니고, 스카이박스의 scale설정할때 far를 반지름으로 씀. 엄청크게됨

2) 쉐이더에서 렌더링할때 쉐이더코드에서 강제로 마치 물체가 굉장히 멀리있는거처럼 거짓말을 치는방법.
 - 스카이박스가 Far위치에 존재할텐데 어차피 NDC좌표계에서 z값이 1인 좌표로 옮겨질 겁니다. 
   그런데 처음 로컬스페이스에서 정점이 0.5 크기 였으니까 월드뷰프로젝션 아예 생략해버리고 그냥 정점에 2배곱해서 넘기는 겁니다.

   레스터라이저는 원래 투영행렬 곱해서 전달해주거든요? 투영행렬을 만들때 전체정점에 적용할수있는 딱 하나의 절대적인 행렬을 못만든다고 했습니다 그 이유는 원래 죄표계에서
   NDC좌표계로 이동할때 그 재료로 본인의 z값이 꼭 쓰이기 때문에 Z값에 따른 비율로 좌표값을 계산하기 때문이라고 했어요 옛날 수업에서.
   그래서 좌표값 float4(x y z w)의 w에 z값이 일부러 들어있습니다.
   이 w로 기타 계산이 끝난 xyz값을 나눠준게 진짜 최종 좌표였죠?

   우리는 (x y z w) 에서 z값과 w값을 그냥 1로 고정할겁니다.
   이러면 원래 구였던 메쉬의 정점들이 2배로 될때 벽면에 딱 


   그리고 투영행렬을 안 곱해주면 원래 시야각에 따라 사각형 공간에 원을 그려넣어주는데 그게 없으니 그냥 똥그런 타원 하나만 화면에 띄어지겠죠.
   따라서 정점좌표에 2배 해주고, 투영행렬을 곱해줍니다 우리 시야각에 맞게 투영하는거죠.
   원래 프로세스는 far에 있던걸 1로 투영하는건데 이젠 1에 있던걸 투영하니 z값 좌표가 막 0.0000....1 이렇게 엄청 작게 될겁니다.
   이렇게 엄청 땡겨놓는 이유는 일단 화면에 보일 비율은 맞출수 있다는 거에요. 이렇게 비율이 맞춰진걸 다시 z값이 1이되게 밀어주기만 한다면 우리가 원하는 결과를 얻는겁니다.

   자 다시 정리

   뷰스페이스의 Vx Vy Vz 에 투영행렬 곱하면 
   Px,Py,Pz,Vz
   이걸 레스터라이저에게 주면
   4번째 Vz로 Px Py Pz를 나눠주죠? 그게 NDC 상의 좌표계고 그걸 해상도에 맞게 확대하겟죠?
   근데 나는 Vz로 나눈거 즉 Pz/Vz의 결과가 1이길원해요. 스카이박스니까 최대로 멀리있는거로.

   이떄 Pz에 w를 넣어주는 거에요.
   즉 Px Py w Vz 를 넘겨준다는 말은 곧
      Px Py Vz Vz 와 똑같다는 말입니다.
   
   이렇게 되면 Vz/Vz = 1이 됩니다.

   - 여기까지만 하면 항상 스카이박스가 똑같은 모습만 보여요 회전이 적용 안되있기 때문에.
     따라서 로컬스페이스에 뷰행렬만 곱하되 동차좌표는 0으로 둬서 이동엔 영향을 안받게 해서 곱합니다. 이러면 뷰스페이스의 회전계산만 영향받겠죠.


  - 여기까지 쉐이더코드를 짰으면 스카이박스의 Pos는 하나도 안중요하게 됬습니다. 설정할 필요가 없는거죠.그냥 월드의 원점에 있는걸로 가정합니다.
    회전은 카메라 (뷰스페이스) 설정에 영향을 받고요.굉장히 특이한 그래픽 처리가 된겁니다.




----------------------------------------------------------------------------------------------------

 - 스카이 박스의 큐브 타입도 만들어봐요.
  - 다이렉트에서 제공하는 dds 포멧으로 선생님이 미리 가져왔어요.
   - 어레이사이즈가 항상 1이었는데 이 큐브텍스처 로딩해보면 어레이사이즈가 6으로 되어있어요. 
     그리고 MiscFlags는 4로 되어있는데 이게 값정의 검색해보면 "어쩌구저쩌구_TEXTURECUBE"라는 표시입니다.

     1교시에서 TEXCUBE_0에 따로 넣어준 이유가 이겁니다. TEX_0이 아니라.

  - 그럼 얜 샘플링은 대체 어캐합니까? 
   uv 값 설정이 엄청 복잡할거 같은데.. 
   이걸 다이렉트에서 제공하고있어서 아주 쉽게 처리할수있습니다.
   시간이 없어서 방법만 말할게요

   이제 픽셀쉐이더 에다가 각 정점의 좌표를 보내는데 각 픽셀들의 좌표값이 각 정점의 보간된 값일겁니다.
   우리는 그동안 uv값으로 샘플링했는데
   내가 바라보는 방향의 충돌픽셀을 샘플링해서 그 색상을 알려줍니다. 방향벡터로 샘플링하는거죠.
   픽셀 본인의 위치값이 곧 방향벡터임 너무 간단하죠? 요거는 내일해봅시다.




193