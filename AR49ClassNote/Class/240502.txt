
 - 디버드 MRT 제작까지 했었죠? 우리가 디퍼드 MRT를 전혀 사용한적이 없어용
  - 지금 당장 렌더매니저의 tick()에서 스왑체인 MRT로 그리고 있는데
    deferred MRT로 바꿔 볼게요

    이렇게 바꾼걸 어떻게 잘 체감할수 있을까?
    쉐이더 도메인영역에서 그걸 체감해 볼수 있어요
    일단 enum class에서 DOMAIN_DEFERRED, DOMAIN_DECAL, DOMAINLIGHTING 추가해줍니다.
    이 두가지를 deferred 렌더링이라고하고,
    기존 도메인들은 forward 렌더링이라고 할게요

  - 우린 지금까지 포워드렌더링을 했습니다. (직진렌더링)
    모든 색상 연산을 한꺼번에 해요.
    반면 디퍼드 렌더링은 한꺼번에 계산하지 않아요. 말그대로 지연렌더링 이죠.
    그리기위한 필수적인 정보를 분산시켜놨다가 나중에 합쳐서 계산합니다.

    그럼 대체 디퍼드 렌더링을 굳이 왜 하냐? 포워드렌더링으로 할수 없는 여러가지 효과를 연출할수 있거든요.

    포워드렌더링 방식은 옛날게임에서나 하던 방식이고, 2000년대 중반부터 한창 그래픽 기술경쟁하던 시기에 디퍼드 렌더링이 엄청 발전합니다.
    색깔 계산을 지연렌더링하면 중간에 여러가지 정보를 더 취합, 가공해서 마지막 그림을 완성할수 있는데 이러면 모션블러, 포스트프로세싱처럼 다양한 후처리도 가능합니다.

    선생님은 2012년도 13년도 한창공부할떄 다이렉트9에 해외 논문 뒤져가면서 디퍼르 렌더링 적용했거든요? 그당시에는 디퍼드 렌더링 포폴 들고가면 쩐다 이랬어요 요즘엔 당연한게 되버렸지만..

  - std3d_deferred.fx 
   - 픽셀쉐이더에서 : SV_Target의 의미가 내가 목표로하는 픽셀에 반환타입에 맞게 출력되야 한다는 거잖아요?
     근데 우리는 렌더타겟이 4개인데? 그럼 반환타입을 단순히 float4가 되면 안되겠죠?
     구조체를 반환해야합니다.
     따라서 구조체 PS_OUT에 디퍼드 MRT의 렌더타겟 개수에 대응해서 sv_target들을 포함하게 만듭니다.
     픽셀쉐이더는 PS_OUT을 반환하고, 그 PS_OUT 구조체에는 SV_Target 들이 4개들어 있어요. 기존엔 float4 1개 반환 했는데 이젠 4개 반환한다는 말.

     즉, 쉐이더 짤때 MRT의 렌더타겟 개수에 맞춰서 쉐이더 코드를 짜줘야 한다는거죠.

  - 에셋 매니저에서 디퍼드 쉐이더 하나 만들어 볼게요
   - std3D_DeferredShader
    - 파라미터는 필요없고, 도메인 타입을 오늘 만든 디퍼드로해주고요
    - Std3D_DeferredMtrl라는 디퍼드 재질까지 만들면 됩니다.
 
  - 자 이제 카메라 쪽에다가 카메라 분류를 해야되는데
    CCamera.h에 Opaque만 찍는 카메라 이런거만 있었는데 deferred용 카메라 맴버로 추가해줘야겠죠
 
  - 여기까지 하고, 원래는 랜더매니저 tick()에서 그릴 도메인 지정해서 그렸는데 이젠 그러지 말고 이걸 카메라에 옮길게요.
    CCamera의 render()에서 그걸 수행합니다.

  - 자 이러고 실행해보면 회식 구멍이있죠?
    그리고 texture imgui 확인해보면 디퍼드 텍스처 4장이 마젠타 빨간 초록 파랑 보입니다. 근데 실제 윈도우 상에서는 알록달록한 원은 하나도 안보이고 회색원만 보이죠? 왜그러냐,
    일단 코드가 디퍼드를 OM에 세팅하고 스왑체인 MRT로 교체를 해서 회색 동그라미만 보여요. 근데 imgui에서는 디퍼드 텍스처마다 동그란 색깔들이 보이거든요?
    imgui상에만 디퍼드 관련 텍스처 들이 보이는 이유는 imgui에서는 각 텍스처의 리소스 뷰를 받아서 출력하잖아요? 그래서 imgui에만 보이는 겁니다.

    근데 왜 스왑체인 MRT 바꿨다고 회색동그라미가 보일까요? 스카이박스 다 출력되야 하는거야냐?
    그이유는, 바로 이전에 세팅한 디퍼드 MRT때문이에요, 더 정확히 말하자면 디퍼드 MRT의 깊이 텍스처와 스왑체인 MRT 의 깊이 텍스처를 현재 공유해서 쓰고있기 때문이에요

    자, 맨 처음에 디퍼드 MRT로 세팅했고, 그다음엔 스왑체인 MRT로 교체했어요. 그런데 두 MRT가 똑같은 깊이텍스처를 공유해서 사용하고 있잖아요?
    그래서 스왑체인 MRT에서 렌더링 하려고 하는데 저 동그란영역에 뭔가 깊이값이 남아있던 거에요. 그게 이전 디퍼드 MRT에서 썼던 깊이텍스처의 흔적이죠.
    그래서 스카이박스 그릴때 그 부분만 안그려서 회색동그라미가 보이는 겁니다.

    만약 두 MRT가 서로 다른 깊이텍스처를 썼다면 스카이박스는 아무 문제없이 출력되었을 겁니다.
    아니면 깊이텍스처를 공유하면서 MRT 교체할때 저 회색동그라미가 안뜨게 하려면 MRT 교체 전에 깊이텍스처를 한번 clear 해줬어야 겠죠.

197
=========================================================================

 - std3d_deferred.fx
  - VS_OUT에 뷰포지션, 방향벡터정보들을 담아 픽셀쉐이더에 넘길거에요.
  
  - 만약 텍스처매핑 안해 놓으면 마젠타 색깔로 뜨게 할게요.
    텍스처가 세팅되어 있다면 그 텍스처에 샘플링한 색상을 써야겠죠
    그 결과값을 컬러타겟에 넣어줍니다.

  - 포지션타겟에는 뷰포지션을 저장합니다.
  
  - 노말타겟에는 각 픽셀별 노말벡터로 세팅하되(노말맵이없으면 버텍스쉐이더에서 넘겨준 보간된노말 그대로쓴다는 뜻), 

    노말맵을 썼다면 g_tex_1에서 샘플링한 UV값을 상대노멀값으로 가져오고,
    그 노말맵에서 추출한 상대적인 노말값에 노말변환행렬(본인의 탄젠트바이노멀,노멀벡터)곱한걸 본인의 노말값으로 세팅.
    이거 예전에 했었죠? 빛공부할떄.


  - imgui 상에서 위치 텍스처 보면 정중앙에서 볼때 4등분되어있습니다.
    z값은 +500 넘기게 세팅했죠? 일단 블루값은 항상최대네요. 색깔은 0~1 사이값으로 표현되는데 1을 아득히 넘는 값을 색깔로 보려고 하니까 색깔이 극단적으로 보이는겁니다.
    그래서 우상단은 흰색(x,y,z 다 플러스)
           좌상단은 시안(x는 마이너스여서 색깔 없고 y z 가 그린 블루 합친거)
           좌하단은 파란색 (z값만 플러스) 
           우하단은 마젠타 (x,z 값만 플러스. 레드와 블루 합친게 마젠타.)
  - 지난 시간에 클리어 컬러를 두번째 텍스처 부터 (0 0 0 0) 으로 했는데 그냥 4개다 (0 0 0 1)로 할게요. 알파값 관련 뭔가 문제 있었는데 필기하느라 못들음 ㅠㅠ
    뭔가 부자연 스러운 현상이 생겨서 그랬는듯 값을 (0 0 0 1)로 초기화 해도 어차피 별 상관 없었다고함 

 

 - 이제 디퍼드 텍스처에 분할해서 출력하는거까진 성공헀고 그걸 합치는 쉐이더를 만들어 봅시다.
 - merge.fx
  - 이제부터 쉐이더를 작성할떄는 정보를 꼼꼼하게 주석으로 작성 해줘야 할겁니다.
    이 쉐이더는 스왑체인 MRT에서 사용되어야할 쉐이더다 라고 주석으로 적었어요. (MRT : SwapChain)
    - 잠깐 deferred.fx 로 와서 주석 적어놓음
      g_tex_0은 텍스처 설정 안되있을때 오브젝트 색상.  그걸 define으로 이름 바꿔서 가시성 높임. 이런식으로 계속 적어줌.
 
  - 이 쉐이더는 디퍼드 MRT에 있는 텍스처 4개를 불러와서, 그걸 스왑체인 MRT에 있는 렌더타겟에 기록해주는 쉐이더 입니다.
    그래서 RectMesh를 씁니다 텍스처 해상도만큼 픽셀을 불러와야 디퍼드텍스처들과 스왑체인 텍스처에 일대일로 기록할수 있겠죠?
 
  - 우선 colorTarget 하나만 그대로 스왑체인 텍스처에 복사해 볼게요.

  - RectMesh 정점들의 절댓값이 0.5니까 2배로 늘려주면 NDC좌표계 전체영역으로 지정이 되는거죠? 그리고 float4에서 마지막 w좌표를 1로 해줘야 w로 나눠도 값 변형이 없겠죠
    xyz값 그대로 쓰라고 w자리에 1넣은겁니다 w로 나누니까.
    
    output.vPosition = float4(_in.vPos * 2.f, 1.f); 바로 이부분.


 - 여기까지 하고 쉐이더를 만들어요.
   도메인 단계도 새로 추가할께요 DOMAIN_MERGE 얘는 물체로써 도메인 단계가 아니라, 시스템 적인 도메인이죠 엔진상 중간 전달자 역할만 하는 겁니다 그래서 카메라상에 분류케이스에 
   따로 넣어주지도 않고요.

   Merge Shader
   얘는 깊이가 필요없고, 남겨도 안되요. 

   이걸로 머터리얼까지 만듭니다. MergeMtrl

 - 이제 CCamera::render()로 와서,
   디퍼드 MRT와 스왑체인 MRT로 전환하고나서, 전환하고 여러가지 후작업을 해줍니다.
   우선 Merge재질과 Rect메쉬를 지역변수로 가져와서
   파라미터 지정해주고, (디퍼드 MRT의 컬러타겟 가져와서 쉐이더에 전달.)
   재질업데이트,
   메쉬렌더 하면 끝~


 - 여기까지 여러 렌더타겟에 분할되어 있는 정보를 일단 복사만 해서 출력하는거 해본겁니다.
   원래는 연산까지 하고 모아서 출력해야되는데 거기까진 안된거에요



198