 - 몬스터스크립트 begin()함수
  - 필수적인 요소 3가지를 블랙보드에 기록(스테이트머신의 블랙보드?)

 - CStateMachine()
  - 동적재질처럼 게임플레이할때만 일시적으로 사본을 받을건데
    그게 맴버 m_FSMDynamic 왜냐면 원본 FSM을 고치면 그거 공유해서 쓰는 다른녀석들도 영향을 받기때문.
   

 - 파이널틱에서 현재상태 결정하자는게 어제구조였는데 그러면 접근이 너무 복잡해져서 그 구조 없던일로하고
   FSM이 그냥 현재상태 직접 들고있게 하겠다.
   이렇게 되면 FSM을 공유하는 오브젝트들이 무조건 상태가 같아지게 강제되는데
   이걸 방지하기 위해 FSM 인스턴스라는걸 원본 FSM대신에 쓴다.
   FSM 인스턴스는 레벨이 플레이할떄만 잠깐 생기고사라짐. 런타임도중에만 사본쓰고 버려서 원본 FSM을 에셋처럼써도 충돌이 일어나지않음

 - GetFSMInstance()함수
  - FSM이 자신의 복사본을 주는데 복사생성자를 쓰지 않고(깊은복사안하고)얗은복사한다.
    그렇다고 복사생성자를 대충구현하겠다고 하는게 아니라 복사생성자는 복사생성자대로 제대로 구현한다.
   - FSM을 새로 하나 만들고 그걸 포인터가 들고있게한다
   - 블랙보드는 따로 복사해서 안들고있을거다. 현재상태역시 당장은 null.

 - 이제 스테이츠머신으로 돌아와서
 - begin() 함수
  - m_FSM.get() 즉 원본 FSM을 갖고있었다면
    인스턴스를 생성해서 들고있는다.

 - SetFSM()함수는 원본 FSM을 세팅하는 함수이다. 인스턴스아님

 - FSM의 파이널 틱에서는 현재 상태가 있으면 그 State의 파이널틱을실행시킨다

 - 마스터 FSM은 나를 사용하는 m_StateMachine 정보를 저장하는것은 의미가 없을 수 있음 본인을 참조하는 스테이츠머신이 여러개면 최근에 본인을 사용한 스테이츠 머신으로 계속 바뀔것임

 && 근데 또 지난시간에 FSM 복사생성자 Disable 된거 보고 그래 그냥 만들지 말자면서 또 복사생성자 날려버리심..(?)
 

 - GamePlayStatic에 있는 DrawDebugCigle 함수로 탐지범위를그림
 - ?? 서클디버그 부분에서 반지름 2배로 키워줘야한다고함 기본스케일이 0.5래서 원의 반지름이 내 의도보다 2분의1로 적게 나오기때문에
   곱하기 2해줘야 스케일이 1로 정상적으로 적용된다는듯

 - FSM이 마스터FSM일때만 스테이츠를 진짜로 지우고
   나머지 애들은 그냥 원본복사본을 들고있으니 지우면안됨.
   FSM소멸자에서 이 작업수행

================================================================================================================

 - State에 상태변경함수추가. idle상태에서 다른상태로 변할수있게





















