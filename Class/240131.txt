 - 오늘할거 파티클 모듈 추가하기
    SCALE 모듈(파티클 스케일 변화하는 모듈) 만들기 + CALCULATE_FORCE 모듈(파티클에 주어진 모든힘을 계산하는 모듈)

 - 파티클 모듈 구조체가 모듈 추가할때마다 자꾸 용량 늘어나는데 그떄마다 패딩 데이터 계산하는게 너무 귀찮다. 이럴바에 알아서 패팅해주는 코드 생성하자
   CParticleSystem.cpp 에서 구조화버퍼 선언해줄때 패딩 크기 계산해주는 코드 추가.
   ModuleAddSize += 16 - ( sizeof(파티클모듈구조체) % 16);
                    구조체 크기를 16으로 나눈 나머지가 바로 16바이트 못채운 잉여 바이크 크기인데 그걸 16에 뺸걸 더해주면 16에 맞춰짐
                    
 - <파티클 수명시간에 맞춰 크기가 점점 변하기>
  - 수명을 정규화 시켜서 모든 라이프타임을 0~1사이에 두는걸로 설계한다. 10초건 50초건 Normalized Age를 가진다.
    수명이 10초인 애는 5초에 0.5 정규화 수명, 50초인애는 25초에 0.5 정규화수명.
    정규화 수명은 현재까지 생존시간을 전체수명 시간으로 나누면됨

    vScaleRatio 맴버가 파티클 수명이 끝날때의 파티클 최종크기 비율이다. 더 클 수도 있고 작을수도 있다.
    

    최종결과로 내 '최초스케일' x '현재파티클나이가 고려된 배율'이 최종파티클 스케일이다.


 - noise force 모듈은 파티클이 규칙성 없이 제자리에서 진동하는 움직임을 파티클에 적용시키는 모듈이다.
   Min,MaxMass는 파티클의 최초 질량의 범위이다. 중력의 영향을 받게 할때 질량이 무거우면 느리게, 가벼우면 빠르게움직인다.
 

 - Noise Force를 구현하는 법
   난수표(노이즈텍스처)에서 랜덤값 뽑아낸 값(vRnad)을 노멀라이즈한다. 이것은 랜덤한 방향벡터를 구하는 것이다.
   모듈에서 설정한 NoiseForceScale에 앞서구한 방향백터 vRandomForce를 곱한다. 

    노이즈포스와 최종힘 포스를 따로 분리하겠다. vNoiseForce, vForce.
    이렇게 하는 이유는 노이즈포스의 힘 방향을 일정한 텀을두고 바꾸게 하기 위함. 기존에는 매 프레임마다 바꿔댔다.
    파티클에는 NoiseForceTime 맴버가 추가됬고 모듈에서도 NoiseForceTerm 맴버가 추가됬따

    - g_tiem은 꼐속누적되는 서질을 이용해서 노이즈포스의 변경 주기를 조절한다.

    - 노이즈텍스처의 UV의 x값을 정규화 하는 코드
      1/전체 쓰레드개수 * id.x(본인쓰레드 id) 
      텍스처를 UV값으로 접근해야되는데 픽셀(해상도)로 접근하지 않고 쓰레드의 ID로 접근하는 것이다. 이래도 상관없음 이 엔진은
      어차피 지금까지는 쓰레드id와 텍스처 해상도와 매칭 시키는 구조이기 때문.
      MAXCOUNT에 -1 해주는 것은 쓰레드 아이디가 1이 아니라 0부터 시작되기 때문.

   