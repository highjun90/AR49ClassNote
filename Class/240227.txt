 - 어제했던 작업이어서 게임오브젝트 파일에 세이브로드하는거 부터 시작하겠다.

 - SaveGameObject()
  - 먼저 이름저장
  - 오브젝트가 저장해야할 정보가 뭐가있을까
  - 레이어인덱스값은 저장할 필요가 없을듯 어차피 레이어 로드할때 거기에 딸린 오브젝트들도 같이 로드할텐데 자동으로 그 레이어 소속으로 세팅될테니.
  - 컴포넌트 정보 저장. 모든컴포넌트 말고 갖고있는 컴포넌트만.
    컴포넌트 저장은 따로 함수 구현하려면 코드 너무 길어져서 여기서 반복문 돌면서 저장함
   - GetComponent()할때마다 그게 null이였으면 continue 하고 아니면 파일에 fwrite().
     컴포넌트 종류가 워낙 많고 각 컴포넌트들이 저장해야할 정보도 다르기 때문에 SaveToFile()로 파일포인터를 컴포넌트에 넘겨줘서 지들이 알아서 저장하라고 함
     컴포넌트에 순수가상함수 2개 추가. 컴포넌트들이 무조건 구현해야되는거. SaveToFile(), LoadFromFile().

 - Transform 컴포넌트.
  - m_bAbsolute는 부모에 크기 영향 받을지 아닐지 정보저장하는거래서 저장해야하고,
    pos scale rot 로컬행렬까지는 저장해줘야함 따라서 총 4개 맴버를 파일에 저장.
  - Load 할때는 Save의 역순으로 <- 이거 맞는지 확인해야함..

 - 메쉬렌더는 맴버가 없어서 그냥 부모쪽(렌더컴포넌트)꺼 쓰고 따로 구현안한다
 - 스크립트와 그 스트립트 객체를 상속하는 스크립트들(예시로 만들어 논것들등등)도 Save Load 구현해야함

 - Collision컴포넌트
  - Pos, scale, absolute, type(충돌체타입) 총4개를 파일에 기록해야한다.
    행렬은 어차피 갱신된다고 저장안해도 된다했나? 설명제대로 못들음
 
 - 애니메이터2D 컴포넌트
  - 얘는 단순히 맴버의 포인터를 저장한다고 될일이 아니다.
    반복문 돌면서 m_mapAnim 저장 일일히 해야한다.
    1) 우선 애니메이션 개수를 저장
    2) 맵을 순회하면서 각각의 애니메이션 정보를 저장한다.
     - CAnim 객체에 또 SaveToFile() 함수를 실행시켜준다.

    3) 플레이중인 애니메이션 key 저장
     - 재생중이 아니었으면 (==null이 아니었다면) 그 key  문자열을 파일에 저장.
    4) bRepeat 정보 저장

  - 로드할떄
   ?> 왜 이건 역순으로 로드 안하지... 로드를 세이브의 역순으로 할때와 아닐때가 정확이 뭐지 애초에 역순으로 로드하는 상황이 있는게 맞나?
   - .empty()가 null 문자열 null인지 검사해주는건가봄

 - CAnime
  - 세이브
   - 프레임의 사이즈 정보저장. 로드할때 필요.
   - 모든프레임 정보 저장. tAnimFrm 크기에 프레임 개수만큼 한꺼번에 파일에 저장.
   - 아틀라스 텍스처 정보저장
  - 로드
  - 벡터용량 늘릴때 reserve말고 resize할것. reserve는 그냥 capacity만 늘린거고 실제 벡터범위는 resize로 조절해야함.
    만약 reserve만 한다? 그럼 벡터가 실질적으로 데이터 저장할 전체 공간은 늘지않은거임 나중에 재할당한다치더라도

 - CLight2D
  - tLightInfo 딸랑하나

 - CCamera
  - '행렬은 매번계산하는거니까 필요없고'
    '매 프레임마다 물체 분류하는거니까 상관없고'
    행렬같은건 꾸준히 파일에 저장안한다.
  - 세이브하는 맴버는 코드 참조해서 볼것 너무많음

 - 렌더컴포넌트 
  - 메쉬나 공유재질, 현재재질 정보는 에셋매니저가 들고있으니까 SaveAssetRef() 이용해서 파일에 저장.
  - 현재재질은 현재 상황에 따라 공유재질일수도, 동적재질일 수도 있다. 현재 이 렌더컴포넌트가 뭘 참조하냐에 따라 다름.
    

  - 동적재질은 플레이 중일때만 순간적으로 잠깐 쓰일 놈이다. 레벨이 정지 상태일땐 생성하지 않는다.
    스크립트의 생성자에서나, 레벨의 begin이 아닌 상태에서 동적재질 만들어놔봤자 소용이 없다.
    지난 시간에 동적재질 무조건 만들고 시작해라 라는 말은 begin()함수 쪽에서 해야한다는 말이었다.
   
    애초에 동적재질은 에셋매니저에서 관리되는 놈도아니고 레벨이 플레이 상태일때만 잠깐 생기는 놈이기 때문에
    에셋매니저와 관련된 함수인 SaveAssetRed()에서 동적재질에 관한 코드는 있을 필요가 없음
    랜더컴포넌트의 GetDynamicMaterial()함수에서 레벨이 play가 아닐때 null 추가 

    이러한이유로 세이브 로드시에 동적재질만 쏙빼고 해놈. 

 - CTileMap
  - 역시 엄청많음 기록할만한거 몇개만기록
  - 무슨 아틀라스텍스처 썼는지 SaveAssetRef()로 기록
  - 구조화버퍼는 따로 저장하지않음 어차피 파이프라인보낼때 생성할듯

  파티클시스템부터 다음시간
  =========================================================================================