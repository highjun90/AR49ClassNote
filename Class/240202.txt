 <파티클 방향을 바꾸기위해 행렬 곱할때 주의할점?>
 - 지난시간에 w값이 1이여서 방향매트릭스가 아니라 위치까지 이동하는 행렬이 되버렸다. 그래서 카메라 이동할떄마다 파티클 위치가 막 멀어지는 이상한 현상이 나온것이다. 이 한 부분만 0값으로 고치면
   정상 동작한다.
   float3 vR = normalize(mul(float4(particle.vVelocity.xyz, 1.f), g_matView).xyz);
                                                            여기를 0으로 해야 위치이동을 안하고 방향만 바꾼다.
   float3 vR = normalize(mul(float4(particle.vVelocity.xyz, 0.f), g_matView).xyz);
 
 <입체적인 파티클 효과를 구현하는 방법>
  - 원래라면 단면하나 (사각형 하나)에 파티클 이미지를 그리는데 이렇게 되면 카메라 이동해서 볼때 종이에 그려진 효과가 납짝하게 이동해 보이는 어쩔수 없는 현상이 보인다.
    이게 카메라를 xy축으로만 이동하는 2D겜이면 이런 현상이 문제가 안되는데 나중에 3차원으로 이동해 볼수있는 3D게임일땐 뭔가 부자연 스러워보인다.
    
    따라서 한 파티클 효과를 출력할때 진행방향축에 90도 회전한 동일한 파티클을 하나 크로스 시켜서 출력하면 이게 마치 입체인듯한 파티클 효과가 된다
    즉 원래는 파티클 이동방향 정면에서 보면 - 이나 | 처럼 일자선으로 보일텐데 이 효과 적용하면 + 십자가로 보이게 된다.

    이렇게 되면 원래 점 1개당 4개로 분할되는게 아니라 8개로 분할 되어야함. 새로 추가된 면의 좌표는 기존엔 xy값에 z가 0이었는데
    크로스가 되게 사각형을 만드려고 하므로 xz값에 y가 0이어야함. 그냥 기존 y값좌표를 z값에 복붙한게 새로운 점 4개의 좌표가 된다
    GS_OUT output[4] 배열이 원래 내가 출력하고자 하는 사각형 면의 정점들이라면 output_cross는 output이 만드는 사각형에 수직으로 직교하는 사각형의 점들이된다
    
    이 효과를 적용하려면 지오메트릭 쉐이더에서 원래 사각형 만드려면 정점 6개 필요했는데 이제 사각형 2개를 만들어야 되니 점 6개 더 추가해서 총 12개로 만들어야함
    [maxvertexcount(12)]
    
    
  - 요 구조를 적용할떄 한가지 더 주의할것은 소스로 쓰이는 텍스처 이미지도 신경써서 정 중앙에 그려져 있어야 한다. 어긋나 있으면 파티클이 2개가 같이 이동하는 걸로 보인다.
    우리가 원하는건 파티클들이 이동하는 방향축에 딱 겹쳐서 두 파티클이 합쳐져서 마치 입체처럼 보이게 하는 것이다.


 - 지난시간 cpp파일에는 16바이트 단위로 구조화 버퍼 사이즈 자동으로 맞춰주는 코드 추가했는데 fx파일에서 바인딩되는 구조체는 이런 기능이 없어서
   직접 패딩바이트를 넣어준다. cpp는 무조건 16바이트 단위로 자동으로 맞춰서 구조화 버퍼 사이즈 맞춰주지만 fx는 내가 일일히 그거에 맞춰서 패딩 넣어줘야되는 상황.


 - Drag모듈은 파티클 속도가 점점 줄어들게 하는 파티클모듈.

 - AlphaBasedLife -> 본인의 Age에 따라서 파티클이 점점 흐려지게 만드는 알파값을 조절 시키라는 모듈.  
                     0은 기능 off, 1은 노멀라이즈된 수명이 기준, 2는 그냥 수명값의 절대수치 기준.
                     1같은 경우는 전체수명대비 현재수명비로 투명화 정도를 조절,
                     2같은 경우는 그냥 흘러간 시간의 절대값에 따라 투명화 정도 조절
                     - AlphaMaxAge 는 2번인 경우에 알파값이 최대가 되는 시간을 알려주는 맴버.


  - particle.fx의 PS_Particle()함수에 수명에 따른 알파값 검사기능을 넣어준다
   - 1번이면 정규화된 수명을 그대로 vOutColor.a (알파값)으로 설정


 - GS_OUT의 인스턴스id를 채워줘야 파티클이 개별적으로 동작함. 원래 설정안해줘서 다 동일한 id를 가져서 마치 하나의 파티클인마냥 같이 업데이트 됫음

=================================================================================================

 - <파티클 출력시 자글거리는 현상이 있었던 이유>
   인스턴스id를 float이 아니라 unit로 전달해야한다. 예를들어 id가 27이여야 되는데 26.999.. 가 되버리면 보간값을 취하는 기준이 27번 파티클이 아니라 26번 파티클이 될수도있따.
   이러면 어떤 비활성화된 파티클에 접근해서 색깔을 가져올수있으므로 자글자글 이상한 현상이 출력된다.
   인스턴스 id의 자료형을 정확한 정수타입으로 지정하면 문제가 사라짐

