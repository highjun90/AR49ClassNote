 1. 렌더링용 컴포넌트 만들기
  - CRenderComponent는 CComponent를 상속
    CMeshRender는 CRenderComponent 를 상속
  - CObject는 CEntity를 상속. 
    CComponent를 가리키는 포인터를 멤버변수로가짐

  A1. 템플릿쓴 T* (&Arr)[Size] 포인터배열 확실히 짚기 (Delete_Array() 함수. 컴포넌트를 모두 릴리스해줌)

  - 레벨이 render()하거나 release()하면 g_Object에 갖고있는 모든것을 한 Tick()에 작업한다.

  A2. '컴포넌트에서는 finalTick()을 무조건 구현하게 할거고..' <=?

  - 디바이스에서 상수버퍼 관리하는걸 만들겁니다 -> transform에서 언제든지 상수버퍼에 접근할수있어야 GPU에 그 정보 전달하는데 지금 그 역할이 없으니 만들겠다라고 이해함
    CConstantBuffer라는 클래스 포장지 만듬
  
   - A3. Element의 정확한의미

  - 지금은 transform 옮기는 상수버퍼 하나 만들었는데 앞으로는 더 많은 상수버퍼를 쓸것임 따라서 상수버퍼타입을 enum class로 정의한다.
   - CB_Type
    - 트랜스폼, 머터리얼, 글로벌, 애니메이션

  - GetConstantBuffer()함수 - 디바이스에서 상수버퍼 가져오는함수

  ** 앞으로 구조체타입은 앞에 t를 붙이겠다(tTransform 등)

  - _Src는 보낼 원본데이터.(Source)
  - 이해가 안되는 방식이긴한데 ElementCount를 최초 인자 초기화이기도한 0으로 전달하면 버퍼크기를 최대로 하겠다는 의미로 코드가 짜여질거라고함. 굳이..?

  - 게임오브젝트는 트렌스폼이 있고 트랜스폼은 위치정보를 갖고있다. 
    이제 디바이스로부터 상수버퍼를 가져와 GPU로 전달하는 구조를 만든것이다.

  - Setdata()함수는 데이터를 바꾸는거고 UpdateData()함수가 바로 레지스터에 GPU에 값을 바인딩하는 함수.
    모든 쉐이더 스테이지에 바인징하기도함

  A3. pCB는 program constant buffer 인가?

  - 프랜스폼 컴포넌트는 자기를 소유한 오브젝트의 위치정보등을 가지는것 
    상수버퍼를 이용해 위치정보 업데이트하는 기능까지 업데이트.

  - 오브젝트가 어떤컴포넌트를 들고있을떄 모든 컴포넌트들도 자기를 소유한 오브젝트의 정보를 알고있어야함.
  - 컴포넌트는 object에 friend 걸어놔서 private에 접근가능함

  - Render만 제외하고 begin() 이나 tick()같은 함수는 컴포넌트들이 가상함수로 들고있음. Render()는 그리기를 안하는 컴포넌트도 있으니 가상함수아님
    오브젝트에선 이 함수들을 반복문 돌면서 갖고있는 컴포넌트들에 모두 실행시켜줌

2. 컴포넌트 위치관련기능은 만들었고 이제 렌더기능을 만들자. 
   그냥 CComponent 말고 CRenderConponent 나 그걸상속하는 MeshComponent 임.

 - 우선 그려질려면 자기 모양(메쉬)를 결정해야하고, 또 그걸 그리려면 그걸 그려줄 쉐이더를 지정해줘야한다.

 - 컴포넌트 반환하는 함수 ( Transform() 등 )들 이름 앞에 Return좀 적어줬으면..
   그걸 그냥 메크로함수로 만드러버리네.. 매크로인자 Type은 반환형식, TYPE 은 컴포넌트의 타입 (별차이 없나..?)


 - 매크로 정의 할때 ##붙이면 이어붙이기가됨.

 - RenderComponent는 Component를 상속하고 있으므로 인자로 받은 Component 포인터를 다운캐스팅할때 문제가 없음

 - 


























